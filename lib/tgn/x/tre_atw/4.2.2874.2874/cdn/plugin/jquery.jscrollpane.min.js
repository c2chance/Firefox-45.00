(function(b, a, c) {
    b.fn.jScrollPane = function(e) {
        function d(D, O) {
            function ar(aQ) {
                var aL, aN, aM, aJ, aI, aP, aO = !1, aK = !1;
                if (ay = aQ,
                Y === c)
                    aI = D.scrollTop(),
                    aP = D.scrollLeft(),
                    D.css({
                        overflow: "hidden",
                        padding: 0
                    }),
                    aj = D.innerWidth() + f,
                    v = D.innerHeight(),
                    D.width(aj),
                    Y = b('<div class="jspPane" />').css("padding", aH).append(D.children()),
                    al = b('<div class="jspContainer" />').css({
                        width: aj + "px",
                        height: v + "px"
                    }).append(Y).appendTo(D);
                else {
                    if (D.css("width", ""),
                    aO = ay.stickToBottom && K(),
                    aK = ay.stickToRight && B(),
                    aJ = D.innerWidth() + f != aj || D.outerHeight() != v,
                    aJ && (aj = D.innerWidth() + f,
                    v = D.innerHeight(),
                    al.css({
                        width: aj + "px",
                        height: v + "px"
                    })),
                    !aJ && L == T && Y.outerHeight() == Z) {
                        D.width(aj);
                        return
                    }
                    L = T;
                    Y.css("width", "");
                    D.width(aj);
                    al.find(">.jspVerticalBar,>.jspHorizontalBar").remove().end()
                }
                Y.css("overflow", "auto");
                T = aQ.contentWidth ? aQ.contentWidth : Y[0].scrollWidth;
                Z = Y[0].scrollHeight;
                Y.css("overflow", "");
                y = T / aj;
                q = Z / v;
                az = q > 1;
                aE = y > 1;
                aE || az ? (D.addClass("jspScrollable"),
                aL = ay.maintainPosition && (I || aa),
                aL && (aN = aC(),
                aM = aA()),
                aF(),
                z(),
                F(),
                aL && (N(aK ? T - aj : aN, !1),
                M(aO ? Z - v : aM, !1)),
                J(),
                ag(),
                an(),
                ay.enableKeyboardNavigation && S(),
                ay.clickOnTrack && p(),
                C(),
                ay.hijackInternalLinks && m()) : (D.removeClass("jspScrollable"),
                Y.css({
                    top: 0,
                    width: al.width() - f
                }),
                n(),
                E(),
                R(),
                w());
                ay.autoReinitialise && !av ? av = setInterval(function() {
                    ar(ay)
                }, ay.autoReinitialiseDelay) : !ay.autoReinitialise && av && clearInterval(av);
                aI && D.scrollTop(0) && M(aI, !1);
                aP && D.scrollLeft(0) && N(aP, !1);
                D.trigger("jsp-initialised", [aE || az])
            }
            function aF() {
                az && (al.append(b('<div class="jspVerticalBar" />').append(b('<div class="jspCap jspCapTop" />'), b('<div class="jspTrack" />').append(b('<div class="jspDrag" />').append(b('<div class="jspDragTop" />'), b('<div class="jspDragBottom" />'))), b('<div class="jspCap jspCapBottom" />'))),
                U = al.find(">.jspVerticalBar"),
                ap = U.find(">.jspTrack"),
                au = ap.find(">.jspDrag"),
                ay.showArrows && (aq = b('<a class="jspArrow jspArrowUp" />').bind("mousedown.jsp", aD(0, -1)).bind("click.jsp", aB),
                af = b('<a class="jspArrow jspArrowDown" />').bind("mousedown.jsp", aD(0, 1)).bind("click.jsp", aB),
                ay.arrowScrollOnHover && (aq.bind("mouseover.jsp", aD(0, -1, aq)),
                af.bind("mouseover.jsp", aD(0, 1, af))),
                ak(ap, ay.verticalArrowPositions, aq, af)),
                t = v,
                al.find(">.jspVerticalBar>.jspCap:visible,>.jspVerticalBar>.jspArrow").each(function() {
                    t -= b(this).outerHeight()
                }),
                au.hover(function() {
                    au.addClass("jspHover")
                }, function() {
                    au.removeClass("jspHover")
                }).bind("mousedown.jsp", function(aI) {
                    b("html").bind("dragstart.jsp selectstart.jsp", aB);
                    au.addClass("jspActive");
                    var s = aI.pageY - au.position().top;
                    return b("html").bind("mousemove.jsp", function(aJ) {
                        V(aJ.pageY - s, !1)
                    }).bind("mouseup.jsp mouseleave.jsp", aw),
                    !1
                }),
                o())
            }
            function o() {
                ap.height(t + "px");
                I = 0;
                X = ay.verticalGutter + ap.outerWidth();
                Y.width(aj - X - f);
                try {
                    U.position().left === 0 && Y.css("margin-left", X + "px")
                } catch (s) {}
            }
            function z() {
                aE && (al.append(b('<div class="jspHorizontalBar" />').append(b('<div class="jspCap jspCapLeft" />'), b('<div class="jspTrack" />').append(b('<div class="jspDrag" />').append(b('<div class="jspDragLeft" />'), b('<div class="jspDragRight" />'))), b('<div class="jspCap jspCapRight" />'))),
                am = al.find(">.jspHorizontalBar"),
                G = am.find(">.jspTrack"),
                h = G.find(">.jspDrag"),
                ay.showArrows && (ax = b('<a class="jspArrow jspArrowLeft" />').bind("mousedown.jsp", aD(-1, 0)).bind("click.jsp", aB),
                x = b('<a class="jspArrow jspArrowRight" />').bind("mousedown.jsp", aD(1, 0)).bind("click.jsp", aB),
                ay.arrowScrollOnHover && (ax.bind("mouseover.jsp", aD(-1, 0, ax)),
                x.bind("mouseover.jsp", aD(1, 0, x))),
                ak(G, ay.horizontalArrowPositions, ax, x)),
                h.hover(function() {
                    h.addClass("jspHover")
                }, function() {
                    h.removeClass("jspHover")
                }).bind("mousedown.jsp", function(aI) {
                    b("html").bind("dragstart.jsp selectstart.jsp", aB);
                    h.addClass("jspActive");
                    var s = aI.pageX - h.position().left;
                    return b("html").bind("mousemove.jsp", function(aJ) {
                        W(aJ.pageX - s, !1)
                    }).bind("mouseup.jsp mouseleave.jsp", aw),
                    !1
                }),
                l = al.innerWidth(),
                ah())
            }
            function ah() {
                al.find(">.jspHorizontalBar>.jspCap:visible,>.jspHorizontalBar>.jspArrow").each(function() {
                    l -= b(this).outerWidth()
                });
                G.width(l + "px");
                aa = 0
            }
            function F() {
                if (aE && az) {
                    var aI = G.outerHeight()
                      , s = ap.outerWidth();
                    t -= aI;
                    b(am).find(">.jspCap:visible,>.jspArrow").each(function() {
                        l += b(this).outerWidth()
                    });
                    l -= s;
                    v -= s;
                    aj -= aI;
                    G.parent().append(b('<div class="jspCorner" />').css("width", aI + "px"));
                    o();
                    ah()
                }
                aE && Y.width(al.outerWidth() - f + "px");
                Z = Y.outerHeight();
                q = Z / v;
                aE && (at = Math.ceil(1 / y * l),
                at > ay.horizontalDragMaxWidth ? at = ay.horizontalDragMaxWidth : at < ay.horizontalDragMinWidth && (at = ay.horizontalDragMinWidth),
                h.width(at + "px"),
                j = l - at,
                ae(aa));
                az && (A = Math.ceil(1 / q * t),
                A > ay.verticalDragMaxHeight ? A = ay.verticalDragMaxHeight : A < ay.verticalDragMinHeight && (A = ay.verticalDragMinHeight),
                au.height(A + "px"),
                i = t - A,
                ad(I))
            }
            function ak(aJ, aL, aI, s) {
                var aN = "before", aK = "after", aM;
                aL == "os" && (aL = /Mac/.test(navigator.platform) ? "after" : "split");
                aL == aN ? aK = aL : aL == aK && (aN = aL,
                aM = aI,
                aI = s,
                s = aM);
                aJ[aN](aI)[aK](s)
            }
            function aD(aI, s, aJ) {
                return function() {
                    return H(aI, s, this, aJ),
                    this.blur(),
                    !1
                }
            }
            function H(aL, aK, aO, aN) {
                aO = b(aO).addClass("jspActive");
                var aM, aJ, aI = !0, s = function() {
                    aL !== 0 && Q.scrollByX(aL * ay.arrowButtonSpeed);
                    aK !== 0 && Q.scrollByY(aK * ay.arrowButtonSpeed);
                    aJ = setTimeout(s, aI ? ay.initialDelay : ay.arrowRepeatFreq);
                    aI = !1
                }
                ;
                s();
                aM = aN ? "mouseout.jsp" : "mouseup.jsp";
                aN = aN || b("html");
                aN.bind(aM, function() {
                    aO.removeClass("jspActive");
                    aJ && clearTimeout(aJ);
                    aJ = null ;
                    aN.unbind(aM)
                })
            }
            function p() {
                w();
                az && ap.bind("mousedown.jsp", function(aN) {
                    if (aN.originalTarget === c || aN.originalTarget == aN.currentTarget) {
                        var aL = b(this), aO = aL.offset(), aM = aN.pageY - aO.top - I, aJ, aI = !0, s = function() {
                            var aR = aL.offset()
                              , aS = aN.pageY - aR.top - A / 2
                              , aP = v * ay.scrollPagePercent
                              , aQ = i * aP / (Z - v);
                            if (aM < 0)
                                I - aQ > aS ? Q.scrollByY(-aP) : V(aS);
                            else if (aM > 0)
                                I + aQ < aS ? Q.scrollByY(aP) : V(aS);
                            else {
                                aK();
                                return
                            }
                            aJ = setTimeout(s, aI ? ay.initialDelay : ay.trackClickRepeatFreq);
                            aI = !1
                        }
                        , aK = function() {
                            aJ && clearTimeout(aJ);
                            aJ = null ;
                            b(document).unbind("mouseup.jsp", aK)
                        }
                        ;
                        return s(),
                        b(document).bind("mouseup.jsp", aK),
                        !1
                    }
                });
                aE && G.bind("mousedown.jsp", function(aN) {
                    if (aN.originalTarget === c || aN.originalTarget == aN.currentTarget) {
                        var aL = b(this), aO = aL.offset(), aM = aN.pageX - aO.left - aa, aJ, aI = !0, s = function() {
                            var aR = aL.offset()
                              , aS = aN.pageX - aR.left - at / 2
                              , aP = aj * ay.scrollPagePercent
                              , aQ = j * aP / (T - aj);
                            if (aM < 0)
                                aa - aQ > aS ? Q.scrollByX(-aP) : W(aS);
                            else if (aM > 0)
                                aa + aQ < aS ? Q.scrollByX(aP) : W(aS);
                            else {
                                aK();
                                return
                            }
                            aJ = setTimeout(s, aI ? ay.initialDelay : ay.trackClickRepeatFreq);
                            aI = !1
                        }
                        , aK = function() {
                            aJ && clearTimeout(aJ);
                            aJ = null ;
                            b(document).unbind("mouseup.jsp", aK)
                        }
                        ;
                        return s(),
                        b(document).bind("mouseup.jsp", aK),
                        !1
                    }
                })
            }
            function w() {
                G && G.unbind("mousedown.jsp");
                ap && ap.unbind("mousedown.jsp")
            }
            function aw() {
                b("html").unbind("dragstart.jsp selectstart.jsp mousemove.jsp mouseup.jsp mouseleave.jsp");
                au && au.removeClass("jspActive");
                h && h.removeClass("jspActive")
            }
            function V(s, aI) {
                az && (s < 0 ? s = 0 : s > i && (s = i),
                aI === c && (aI = ay.animateScroll),
                aI ? Q.animate(au, "top", s, ad) : (au.css("top", s),
                ad(s)))
            }
            function ad(aI) {
                aI === c && (aI = au.position().top);
                al.scrollTop(0);
                I = aI;
                var aL = I === 0
                  , aJ = I == i
                  , aK = aI / i
                  , s = -aK * (Z - v);
                (ai != aL || aG != aJ) && (ai = aL,
                aG = aJ,
                D.trigger("jsp-arrow-change", [ai, aG, P, k]));
                u(aL, aJ);
                Y.css("top", s);
                D.trigger("jsp-scroll-y", [-s, aL, aJ]).trigger("scroll")
            }
            function W(aI, s) {
                aE && (aI < 0 ? aI = 0 : aI > j && (aI = j),
                s === c && (s = ay.animateScroll),
                s ? Q.animate(h, "left", aI, ae) : (h.css("left", aI),
                ae(aI)))
            }
            function ae(aI) {
                aI === c && (aI = h.position().left);
                al.scrollTop(0);
                aa = aI;
                var aL = aa === 0
                  , aK = aa == j
                  , aJ = aI / j
                  , s = -aJ * (T - aj);
                (P != aL || k != aK) && (P = aL,
                k = aK,
                D.trigger("jsp-arrow-change", [ai, aG, P, k]));
                r(aL, aK);
                Y.css("left", s);
                D.trigger("jsp-scroll-x", [-s, aL, aK]).trigger("scroll")
            }
            function u(aI, s) {
                ay.showArrows && (aq[aI ? "addClass" : "removeClass"]("jspDisabled"),
                af[s ? "addClass" : "removeClass"]("jspDisabled"))
            }
            function r(aI, s) {
                ay.showArrows && (ax[aI ? "addClass" : "removeClass"]("jspDisabled"),
                x[s ? "addClass" : "removeClass"]("jspDisabled"))
            }
            function M(s, aI) {
                var aJ = s / (Z - v);
                V(aJ * i, aI)
            }
            function N(aI, s) {
                var aJ = aI / (T - aj);
                W(aJ * j, s)
            }
            function ab(aV, aQ, aJ) {
                var aN, aK, aL, s = 0, aU = 0, aI, aP, aO, aS, aR, aT;
                try {
                    aN = b(aV)
                } catch (aM) {
                    return
                }
                for (aK = aN.outerHeight(),
                aL = aN.outerWidth(),
                al.scrollTop(0),
                al.scrollLeft(0); !aN.is(".jspPane"); )
                    if (s += aN.position().top,
                    aU += aN.position().left,
                    aN = aN.offsetParent(),
                    /^body|html$/i.test(aN[0].nodeName))
                        return;
                aI = aA();
                aO = aI + v;
                s < aI || aQ ? aR = s - ay.verticalGutter : s + aK > aO && (aR = s - v + aK + ay.verticalGutter);
                aR && M(aR, aJ);
                aP = aC();
                aS = aP + aj;
                aU < aP || aQ ? aT = aU - ay.horizontalGutter : aU + aL > aS && (aT = aU - aj + aL + ay.horizontalGutter);
                aT && N(aT, aJ)
            }
            function aC() {
                return -Y.position().left
            }
            function aA() {
                return -Y.position().top
            }
            function K() {
                var s = Z - v;
                return s > 20 && s - aA() < 10
            }
            function B() {
                var s = T - aj;
                return s > 20 && s - aC() < 10
            }
            function ag() {
                al.unbind(ac).bind(ac, function(aL, aM, aK, aI) {
                    var aJ = aa
                      , s = I;
                    return Q.scrollBy(aK * ay.mouseWheelSpeed, -aI * ay.mouseWheelSpeed, !1),
                    aJ == aa && s == I
                })
            }
            function n() {
                al.unbind(ac)
            }
            function aB() {
                return !1
            }
            function J() {
                Y.find(":input,a").unbind("focus.jsp").bind("focus.jsp", function(s) {
                    ab(s.target, !1)
                })
            }
            function E() {
                Y.find(":input,a").unbind("focus.jsp")
            }
            function S() {
                function aJ() {
                    var aM = aa
                      , aL = I;
                    switch (s) {
                    case 40:
                        Q.scrollByY(ay.keyboardSpeed, !1);
                        break;
                    case 38:
                        Q.scrollByY(-ay.keyboardSpeed, !1);
                        break;
                    case 34:
                    case 32:
                        Q.scrollByY(v * ay.scrollPagePercent, !1);
                        break;
                    case 33:
                        Q.scrollByY(-v * ay.scrollPagePercent, !1);
                        break;
                    case 39:
                        Q.scrollByX(ay.keyboardSpeed, !1);
                        break;
                    case 37:
                        Q.scrollByX(-ay.keyboardSpeed, !1)
                    }
                    return aI = aM != aa || aL != I
                }
                var s, aI, aK = [];
                aE && aK.push(am[0]);
                az && aK.push(U[0]);
                Y.focus(function() {
                    D.focus()
                });
                D.attr("tabindex", 0).unbind("keydown.jsp keypress.jsp").bind("keydown.jsp", function(aN) {
                    if (aN.target === this || aK.length && b(aN.target).closest(aK).length) {
                        var aM = aa
                          , aL = I;
                        switch (aN.keyCode) {
                        case 40:
                        case 38:
                        case 34:
                        case 32:
                        case 33:
                        case 39:
                        case 37:
                            s = aN.keyCode;
                            aJ();
                            break;
                        case 35:
                            M(Z - v);
                            s = null ;
                            break;
                        case 36:
                            M(0);
                            s = null 
                        }
                        return aI = aN.keyCode == s && aM != aa || aL != I,
                        !aI
                    }
                }).bind("keypress.jsp", function(aL) {
                    return aL.keyCode == s && aJ(),
                    !aI
                });
                ay.hideFocus ? (D.css("outline", "none"),
                "hideFocus" in al[0] && D.attr("hideFocus", !0)) : (D.css("outline", ""),
                "hideFocus" in al[0] && D.attr("hideFocus", !1))
            }
            function R() {
                D.attr("tabindex", "-1").removeAttr("tabindex").unbind("keydown.jsp keypress.jsp")
            }
            function C() {
                if (location.hash && location.hash.length > 1) {
                    var aK, aI, aJ = escape(location.hash.substr(1));
                    try {
                        aK = b("#" + aJ + ', a[name="' + aJ + '"]')
                    } catch (s) {
                        return
                    }
                    aK.length && Y.find(aJ) && (al.scrollTop() === 0 ? aI = setInterval(function() {
                        al.scrollTop() > 0 && (ab(aK, !0),
                        b(document).scrollTop(al.position().top),
                        clearInterval(aI))
                    }, 50) : (ab(aK, !0),
                    b(document).scrollTop(al.position().top)))
                }
            }
            function m() {
                b(document.body).data("jspHijack") || (b(document.body).data("jspHijack", !0),
                b(document.body).delegate("a[href*=#]", "click", function(s) {
                    var aI = this.href.substr(0, this.href.indexOf("#")), aK = location.href, aO, aP, aJ, aM, aL, aN;
                    if (location.href.indexOf("#") !== -1 && (aK = location.href.substr(0, location.href.indexOf("#"))),
                    aI === aK) {
                        aO = escape(this.href.substr(this.href.indexOf("#") + 1));
                        aP;
                        try {
                            aP = b("#" + aO + ', a[name="' + aO + '"]')
                        } catch (aQ) {
                            return
                        }
                        aP.length && (aJ = aP.closest(".jspScrollable"),
                        aM = aJ.data("jsp"),
                        aM.scrollToElement(aP, !0),
                        aJ[0].scrollIntoView && (aL = b(a).scrollTop(),
                        aN = aP.offset().top,
                        (aN < aL || aN > aL + b(a).height()) && aJ[0].scrollIntoView()),
                        s.preventDefault())
                    }
                }))
            }
            function an() {
                var aJ, aI, aL, aK, aM, s = !1;
                al.unbind("touchstart.jsp touchmove.jsp touchend.jsp click.jsp-touchclick").bind("touchstart.jsp", function(aN) {
                    var aO = aN.originalEvent.touches[0];
                    aJ = aC();
                    aI = aA();
                    aL = aO.pageX;
                    aK = aO.pageY;
                    aM = !1;
                    s = !0
                }).bind("touchmove.jsp", function(aQ) {
                    if (s) {
                        var aP = aQ.originalEvent.touches[0]
                          , aO = aa
                          , aN = I;
                        return Q.scrollTo(aJ + aL - aP.pageX, aI + aK - aP.pageY),
                        aM = aM || Math.abs(aL - aP.pageX) > 5 || Math.abs(aK - aP.pageY) > 5,
                        aO == aa && aN == I
                    }
                }).bind("touchend.jsp", function() {
                    s = !1
                }).bind("click.jsp-touchclick", function() {
                    if (aM)
                        return aM = !1,
                        !1
                })
            }
            function g() {
                var s = aA()
                  , aI = aC();
                D.removeClass("jspScrollable").unbind(".jsp");
                D.replaceWith(ao.append(Y.children()));
                ao.scrollTop(s);
                ao.scrollLeft(aI);
                av && clearInterval(av)
            }
            var ay, Q = this, Y, aj, v, al, T, Z, y, q, az, aE, au, i, I, h, j, aa, U, ap, X, t, A, aq, af, am, G, l, at, ax, x, av, aH, f, L, ai = !0, P = !0, aG = !1, k = !1, ao = D.clone(!1, !1).empty(), ac = b.fn.mwheelIntent ? "mwheelIntent.jsp" : "mousewheel.jsp";
            aH = D.css("paddingTop") + " " + D.css("paddingRight") + " " + D.css("paddingBottom") + " " + D.css("paddingLeft");
            f = (parseInt(D.css("paddingLeft"), 10) || 0) + (parseInt(D.css("paddingRight"), 10) || 0);
            b.extend(Q, {
                reinitialise: function(aI) {
                    aI = b.extend({}, ay, aI);
                    ar(aI)
                },
                scrollToElement: function(aJ, aI, s) {
                    ab(aJ, aI, s)
                },
                scrollTo: function(aJ, s, aI) {
                    N(aJ, aI);
                    M(s, aI)
                },
                scrollToX: function(aI, s) {
                    N(aI, s)
                },
                scrollToY: function(s, aI) {
                    M(s, aI)
                },
                scrollToPercentX: function(aI, s) {
                    N(aI * (T - aj), s)
                },
                scrollToPercentY: function(aI, s) {
                    M(aI * (Z - v), s)
                },
                scrollBy: function(aI, s, aJ) {
                    Q.scrollByX(aI, aJ);
                    Q.scrollByY(s, aJ)
                },
                scrollByX: function(s, aJ) {
                    var aI = aC() + Math[s < 0 ? "floor" : "ceil"](s)
                      , aK = aI / (T - aj);
                    W(aK * j, aJ)
                },
                scrollByY: function(s, aJ) {
                    var aI = aA() + Math[s < 0 ? "floor" : "ceil"](s)
                      , aK = aI / (Z - v);
                    V(aK * i, aJ)
                },
                positionDragX: function(s, aI) {
                    W(s, aI)
                },
                positionDragY: function(aI, s) {
                    V(aI, s)
                },
                animate: function(aI, aL, s, aK) {
                    var aJ = {};
                    aJ[aL] = s;
                    aI.animate(aJ, {
                        duration: ay.animateDuration,
                        easing: ay.animateEase,
                        queue: !1,
                        step: aK
                    })
                },
                getContentPositionX: function() {
                    return aC()
                },
                getContentPositionY: function() {
                    return aA()
                },
                getContentWidth: function() {
                    return T
                },
                getContentHeight: function() {
                    return Z
                },
                getPercentScrolledX: function() {
                    return aC() / (T - aj)
                },
                getPercentScrolledY: function() {
                    return aA() / (Z - v)
                },
                getIsScrollableH: function() {
                    return aE
                },
                getIsScrollableV: function() {
                    return az
                },
                getContentPane: function() {
                    return Y
                },
                scrollToBottom: function(s) {
                    V(i, s)
                },
                hijackInternalLinks: b.noop,
                destroy: function() {
                    g()
                }
            });
            ar(O)
        }
        return e = b.extend({}, b.fn.jScrollPane.defaults, e),
        b.each(["mouseWheelSpeed", "arrowButtonSpeed", "trackClickSpeed", "keyboardSpeed"], function() {
            e[this] = e[this] || e.speed
        }),
        this.each(function() {
            var f = b(this)
              , g = f.data("jsp");
            g ? g.reinitialise(e) : (b("script", f).filter('[type="text/javascript"],not([type])').remove(),
            g = new d(f,e),
            f.data("jsp", g))
        })
    }
    ;
    b.fn.jScrollPane.defaults = {
        showArrows: !1,
        maintainPosition: !0,
        stickToBottom: !1,
        stickToRight: !1,
        clickOnTrack: !0,
        autoReinitialise: !1,
        autoReinitialiseDelay: 500,
        verticalDragMinHeight: 0,
        verticalDragMaxHeight: 99999,
        horizontalDragMinWidth: 0,
        horizontalDragMaxWidth: 99999,
        contentWidth: c,
        animateScroll: !1,
        animateDuration: 300,
        animateEase: "linear",
        hijackInternalLinks: !1,
        verticalGutter: 4,
        horizontalGutter: 4,
        mouseWheelSpeed: 0,
        arrowButtonSpeed: 0,
        arrowRepeatFreq: 50,
        arrowScrollOnHover: !1,
        trackClickSpeed: 0,
        trackClickRepeatFreq: 70,
        verticalArrowPositions: "split",
        horizontalArrowPositions: "split",
        enableKeyboardNavigation: !0,
        hideFocus: !1,
        keyboardSpeed: 0,
        initialDelay: 300,
        speed: 30,
        scrollPagePercent: .8
    }
})(jQuery, this)
